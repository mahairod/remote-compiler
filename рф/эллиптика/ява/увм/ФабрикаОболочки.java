/*
 * Авторские права ↄ⃝ 2015, Антон Астафьев Ѱ҃
 *
 * Этот код — свободное программное обеспечение. Вы можете распространять и/или изменять его
 * при условии соблюдения положений Универсальной общественной лицензии GNU только 2-й версии, как
 * опубликовано Фондом Свободных Программ.
 *
 * Этот код распространяется с надеждой на то, что он будет полезен,
 * но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, даже без подразумеваемой гарантии КОММЕРЧЕСКОЙ ЦЕННОСТИ или
 * СООТВЕТСТВИЯ КОНКРЕТНОМУ ПРЕДНАЗНАЧЕНИЮ. Смотрите текст Универсальной общественной лицензии GNU
 * 2-й версии для подробного объяснения (копия включена в файл ЛИЦЕНЗИЯ, поставляемый с этим кодом).
 *
 */

package рф.эллиптика.ява.увм;

import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

public abstract
interface
		ФабрикаОболочки<База, Ядро extends База, Оболочка> {
	static final Logger РЕГИСТРАТОР = Logger.getLogger(ФабрикаОболочки.class.getName());
	
	public abstract Оболочка конструктор(Ядро obj) throws RemoteException;

	default
	@ЗамолчиПредупреждения(КонстПарсера.Строка_Непровер_Oткл)
	Оболочка создай(База база) {
		try {
			return конструктор( (Ядро) база );
		} catch (RemoteException ex) {
			сообщиОбОшибке(ex, база);
			return null;
		}
	}

	default
	public void сообщиОбОшибке(RemoteException ex, База база){
		Строка msg = "Проблема при создании оболочки для " + база.getClass().getName();
		РЕГИСТРАТОР.log(Level.SEVERE, msg, ex);
		throw new IllegalStateException(msg, ex);
	}
}