/*
 * Авторские права ↄ⃝ 2015, Антон Астафьев Ѱ҃
 *
 * Этот код — свободное программное обеспечение. Вы можете распространять и/или изменять его
 * при условии соблюдения положений Универсальной общественной лицензии GNU только 2-й версии, как
 * опубликовано Фондом Свободных Программ.
 *
 * Этот код распространяется с надеждой на то, что он будет полезен,
 * но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, даже без подразумеваемой гарантии КОММЕРЧЕСКОЙ ЦЕННОСТИ или
 * СООТВЕТСТВИЯ КОНКРЕТНОМУ ПРЕДНАЗНАЧЕНИЮ. Смотрите текст Универсальной общественной лицензии GNU
 * 2-й версии для подробного объяснения (копия включена в файл ЛИЦЕНЗИЯ, поставляемый с этим кодом).
 *
 */

package рф.эллиптика.ява.увм.компилятор.вопл;

import рф.эллиптика.ява.увм.ДелегатОбщий;
import рф.эллиптика.ява.увм.ОбработчикТелеВызова;
import рф.эллиптика.ява.увм.ШлюзовойКласс;
import рф.эллиптика.ява.увм.компилятор.маркеры.СопряжениеТелеМаркер;

/**
 *
 * @author Антон Астафьев
 */
class ОболочкаДелегата<Рез, Откл extends Throwable> extends ОбработчикТелеВызова<Рез, Откл, RuntimeException>{

	public ОболочкаДелегата(ДелегатОбщий<Рез,Откл,RuntimeException> делегат, ШлюзовойКласс оболочка) {
		super(делегат, оболочка);
	}

	@Подмени
	protected Рез результат() {
		if (рез!=null){
			if (рез instanceof СопряжениеТелеМаркер){
				СопряжениеТелеМаркер телеОбъект = (СопряжениеТелеМаркер) рез;
				return (Рез) обработкаТелеОбъекта(телеОбъект, false);
			} else {
				return рез;
			}
		} else{
			return null;
		}
	}

	@Подмени
	protected ОболочкаДелегата<Рез,Откл> вызов(Object... параметры) throws Откл {
		Object[] новыеПараметры = new Object[параметры.length];
		for (int i=0; i<параметры.length; i++){
			новыеПараметры[i] = замениПараметр( параметры[i], true );
		}
		рез = делегат.общийВызов(новыеПараметры);

		return this;
	}

}
