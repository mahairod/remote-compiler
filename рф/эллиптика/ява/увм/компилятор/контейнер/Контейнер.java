/*
 * Авторские права ↄ⃝ 2015, Антон Астафьев Ѱ҃
 *
 * Этот код — свободное программное обеспечение. Вы можете распространять и/или изменять его
 * при условии соблюдения положений Универсальной общественной лицензии GNU только 2-й версии, как
 * опубликовано Фондом Свободных Программ.
 *
 * Этот код распространяется с надеждой на то, что он будет полезен,
 * но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, даже без подразумеваемой гарантии КОММЕРЧЕСКОЙ ЦЕННОСТИ или
 * СООТВЕТСТВИЯ КОНКРЕТНОМУ ПРЕДНАЗНАЧЕНИЮ. Смотрите текст Универсальной общественной лицензии GNU
 * 2-й версии для подробного объяснения (копия включена в файл ЛИЦЕНЗИЯ, поставляемый с этим кодом).
 *
 */

/**
 * 
 */
package рф.эллиптика.ява.увм.компилятор.контейнер;

import java.io.Serializable;

/**
 * Тип <code>Контейнер</code> предназначен для 
 * 
 * @author Антон Астафьев
 * @since Ява-8
 * 
 */
public class Контейнер implements Serializable {
	public char[] тип;
	public int идентификатор;

	Контейнер(){
	}

	public Контейнер(char[] тип, int идентификатор) {
		this.тип = тип;
		this.идентификатор = идентификатор;
	}

	@Override
	public int hashCode() {
        int h = 0;
        if (hash==0 && тип.length > 0) {
            char val[] = тип;
            for (int i = 0; i < val.length; i++) {
                h = 31 * h + val[i];
            }
            hash = h;
        }
        return hash ^ идентификатор;
	}
	
	private int hash = 0;

	@Override
	public boolean equals(Object obj) {
		if ( !(obj instanceof Контейнер) ){
			return false;
		}
		Контейнер дрК = (Контейнер) obj;
		boolean равны = (идентификатор == дрК.идентификатор) && (тип.length == дрК.тип.length);
		int и = 0;
		while (равны && и < тип.length){
			равны = тип[и] == дрК.тип[и];
			и++;
		}
		return равны;
	}

}
