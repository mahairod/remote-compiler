/*
 * Авторские права ↄ⃝ 2015, Антон Астафьев Ѱ҃
 *
 * Этот код — свободное программное обеспечение. Вы можете распространять и/или изменять его
 * при условии соблюдения положений Универсальной общественной лицензии GNU только 2-й версии, как
 * опубликовано Фондом Свободных Программ.
 *
 * Этот код распространяется с надеждой на то, что он будет полезен,
 * но БЕЗ КАКИХ-ЛИБО ГАРАНТИЙ, даже без подразумеваемой гарантии КОММЕРЧЕСКОЙ ЦЕННОСТИ или
 * СООТВЕТСТВИЯ КОНКРЕТНОМУ ПРЕДНАЗНАЧЕНИЮ. Смотрите текст Универсальной общественной лицензии GNU
 * 2-й версии для подробного объяснения (копия включена в файл ЛИЦЕНЗИЯ, поставляемый с этим кодом).
 *
 */

package рф.эллиптика.ява.увм;

import java.io.Serializable;
import java.rmi.RemoteException;
import java.util.logging.Level;
import java.util.logging.Logger;

import рф.эллиптика.ява.увм.компилятор.маркеры.СопряжениеТелеМаркер;
import рф.эллиптика.ява.увм.компилятор.оболочки.ОболочкаТелеКласса;

/**
 * Тип <code>ШлюзовойКласс</code> предназначен для 
 * 
 * @author Антон Астафьев
 * @since Ява-8
 * 
 */
public interface ШлюзовойКласс extends РасширениеШлюза {
	<ТипПрокси extends СопряжениеТелеМаркер, ТипОболочки extends СопряжениеТелеМаркер & ОболочкаТелеКласса<Object, ТипПрокси> >
	ТипПрокси внешнееПредставление(ТипОболочки оболочка);

	<ТипПрокси extends СопряжениеТелеМаркер, ТипОболочки extends СопряжениеТелеМаркер & ОболочкаТелеКласса<Object, ТипПрокси>>
	ТипОболочки внутреннееПредставление(ТипПрокси сырой);

	static final Logger LOGGER = Logger.getLogger(ШлюзовойКласс.class.getName());

	Object дайОснову();

	default
	Serializable замена(Object obj)
		{ return null; }

	default
	Object замена(Serializable obj)
		{ return null; }

	default
	<Рез> Рез сообщиОбОшибке(RemoteException ex)
	{
		LOGGER.log(Level.SEVERE, "Проблема при вызове телеметода ТелеКласса " + дайОснову().getClass().getName(), ex);
		throw new IllegalStateException(ex);
	}

}
